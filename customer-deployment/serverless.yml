service: my-custom-service

package:
  individually: true
  exclude:
    - ./**

provider:
  name: openwhisk
  runtime: nodejs:default
  ignore_certs: true

custom:
  customer-namespace: ${opt:customer-namespace, file(package.json):customer-namespace}
  customer-package: ${opt:customer-package, file(package.json):customer-package}
  bindings-namespace: ${opt:bindings-namespace, file(package.json):bindings-namespace}
  common-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-common@latest
  carts-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-cart@latest
  categories-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-category@latest
  customers-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-customer@latest
  orders-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-order@latest
  products-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-product@latest
  healthchecks-actions: /${self:custom.customer-namespace}/commerce-cif-commercetools-healthcheck@latest
  concurrency: 200

plugins:
  - '@cruglobal/serverless-merge-config'
  - serverless-openwhisk

resources:
  packages:
    commercetools:
      parameters:
    commerce-cif-commercetools-cart@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-cart@latest
      parameters: ${file(credentials.json)}
    commerce-cif-commercetools-category@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-category@latest
      parameters:
        cachetime: 300
        $<<: ${file(credentials.json)}
    commerce-cif-commercetools-customer@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-customer@latest
      parameters: ${file(credentials.json)}
    commerce-cif-commercetools-product@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-product@latest
      parameters:
        cachetime: 300
        $<<: ${file(credentials.json)}
    commerce-cif-commercetools-order@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-order@latest
      parameters: ${file(credentials.json)}
    commerce-cif-commercetools-common@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-common@latest
    commerce-cif-commercetools-healthcheck@latest:
      binding: /${self:custom.bindings-namespace}/commerce-cif-commercetools-healhcheck@latest
      parameters: ${file(credentials.json)}

functions:
  getCart:
    name: ${self:custom.customer-package}/getCart
    sequence:
      - ${self:custom.carts-actions}/getCartService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postCart:
    name: ${self:custom.customer-package}/postCart
    sequence:
      - ${self:custom.carts-actions}/postCartService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deleteCartEntry:
    name: ${self:custom.customer-package}/deleteCartEntry
    sequence:
      - ${self:custom.carts-actions}/deleteCartEntryService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postCartEntry:
    name: ${self:custom.customer-package}/postCartEntry
    sequence:
      - ${self:custom.carts-actions}/postCartEntryService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  putCartEntry:
    name: ${self:custom.customer-package}/putCartEntry
    sequence:
      - ${self:custom.carts-actions}/putCartEntryService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postShippingAddress:
    name: ${self:custom.customer-package}/postShippingAddress
    sequence:
      - ${self:custom.carts-actions}/postShippingAddressService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deleteShippingAddress:
    name: ${self:custom.customer-package}/deleteShippingAddress
    sequence:
      - ${self:custom.carts-actions}/deleteShippingAddressService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postBillingAddress:
    name: ${self:custom.customer-package}/postBillingAddress
    sequence:
      - ${self:custom.carts-actions}/postBillingAddressService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deleteBillingAddress:
    name: ${self:custom.customer-package}/deleteBillingAddress
    concurrency: ${self:custom.concurrency}
    sequence:
      - ${self:custom.carts-actions}/deleteBillingAddressService
      - ${self:custom.common-actions}/webActionTransformer
    annotations:
      web-export: true

  postShippingMethod:
    name: ${self:custom.customer-package}/postShippingMethod
    sequence:
      - ${self:custom.carts-actions}/postShippingMethodService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deleteShippingMethod:
    name: ${self:custom.customer-package}/deleteShippingMethod
    sequence:
      - ${self:custom.carts-actions}/deleteShippingMethodService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getShippingMethods:
    name: ${self:custom.customer-package}/getShippingMethods
    sequence:
      - ${self:custom.carts-actions}/getShippingMethodsService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getPaymentMethods:
    name: ${self:custom.customer-package}/getPaymentMethods
    sequence:
      - ${self:custom.carts-actions}/getPaymentMethodsService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postPayment:
    name: ${self:custom.customer-package}/postPayment
    sequence:
      - ${self:custom.carts-actions}/postPaymentService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postCartPayment:
    name: ${self:custom.customer-package}/postCartPayment
    sequence:
      - ${self:custom.carts-actions}/postCartPaymentService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deletePayment:
    name: ${self:custom.customer-package}/deletePayment
    sequence:
      - ${self:custom.carts-actions}/deletePaymentService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  deleteCartPayment:
    name: ${self:custom.customer-package}/deleteCartPayment
    sequence:
      - ${self:custom.carts-actions}/deleteCartPaymentService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postCoupon:
    name: ${self:custom.customer-package}/postCoupon
    sequence:
      - ${self:custom.carts-actions}/postCouponService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getCategories:
    name: ${self:custom.customer-package}/getCategories
    sequence:
      - ${self:custom.categories-actions}/getCategoriesService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getCategoryById:
    name: ${self:custom.customer-package}/getCategoryById
    sequence:
      - ${self:custom.categories-actions}/getCategoriesService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getCategoryBySlug:
    name: ${self:custom.customer-package}/getCategoryBySlug
    sequence:
      - ${self:custom.categories-actions}/getCategoryBySlugService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getCustomerById:
    name: ${self:custom.customer-package}/getCustomerById
    sequence:
      - ${self:custom.customers-actions}/getCustomerByIdService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postCustomerLogin:
    name: ${self:custom.customer-package}/postCustomerLogin
    sequence:
      - ${self:custom.customers-actions}/postCustomerLoginService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  postOrder:
    name: ${self:custom.customer-package}/postOrder
    sequence:
      - ${self:custom.orders-actions}/postOrderService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getProductById:
    name: ${self:custom.customer-package}/getProductById
    sequence:
      - ${self:custom.products-actions}/getProductByIdService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  searchProducts:
    name: ${self:custom.customer-package}/searchProducts
    sequence:
      - ${self:custom.products-actions}/searchProductsService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getProductBySlug:
    name: ${self:custom.customer-package}/getProductBySlug
    sequence:
      - ${self:custom.products-actions}/getProductBySlugService
      - ${self:custom.common-actions}/webActionTransformer
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true

  getHealth:
    name: ${self:custom.customer-package}/getHealth
    sequence:
      - ${self:custom.healthchecks-actions}/getHealthService
    concurrency: ${self:custom.concurrency}
    annotations:
      web-export: true
